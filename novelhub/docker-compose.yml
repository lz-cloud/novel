version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: novelhub-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-novelhub}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-novelhub}
      POSTGRES_DB: ${POSTGRES_DB:-novelhub}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - novelhub-net

  redis:
    image: redis:7-alpine
    container_name: novelhub-redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - novelhub-net

  backend:
    image: ${BACKEND_IMAGE:-ghcr.io/your-gh-org/novelhub-backend:latest}
    container_name: novelhub-backend
    env_file:
      - ./.env
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      JWT_SECRET: ${JWT_SECRET}
      SESSION_TTL_SECONDS: ${SESSION_TTL_SECONDS:-604800}
      FRONTEND_URL: ${PUBLIC_URL}
      OAUTH_GITHUB_CLIENT_ID: ${OAUTH_GITHUB_CLIENT_ID}
      OAUTH_GITHUB_CLIENT_SECRET: ${OAUTH_GITHUB_CLIENT_SECRET}
      OAUTH_GOOGLE_CLIENT_ID: ${OAUTH_GOOGLE_CLIENT_ID}
      OAUTH_GOOGLE_CLIENT_SECRET: ${OAUTH_GOOGLE_CLIENT_SECRET}
      OAUTH_GITHUB_CALLBACK_URL: ${OAUTH_GITHUB_CALLBACK_URL}
      OAUTH_GOOGLE_CALLBACK_URL: ${OAUTH_GOOGLE_CALLBACK_URL}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "4000:4000"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - novelhub-net

  frontend:
    image: ${FRONTEND_IMAGE:-ghcr.io/your-gh-org/novelhub-frontend:latest}
    container_name: novelhub-frontend
    env_file:
      - ./.env
    environment:
      - VITE_API_BASE_URL=/api
    depends_on:
      backend:
        condition: service_healthy
    expose:
      - "8080"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - novelhub-net

  nginx:
    image: ${NGINX_IMAGE:-nginxinc/nginx-unprivileged:1.25-alpine}
    container_name: novelhub-nginx
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    ports:
      - "${PORT:-8080}:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - novelhub-net

volumes:
  db-data:
  redis-data:

networks:
  novelhub-net:
    driver: bridge
